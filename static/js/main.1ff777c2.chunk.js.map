{"version":3,"sources":["colors.js","components/radar-chart/index.js","utils/api/index.js","components/card/card.styled.js","components/card/card.component.js","components/card-list/card-list.styled.js","components/card-list/card-list.component.js","components/header/header.styled.js","components/header/header.component.js","components/search-field/search-field.styled.js","components/search-field/search-field.component.js","redux/modules/search-field/search-field.actions.js","styles.js","App.js","utils/api/hooks/usePokemon.js","redux/modules/search-field/search-field.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["colors","RadarChart","data","console","log","style","flex","captions","Object","entries","reduce","acc","cur","meta","color","size","options","captionProps","textAnchor","fontSize","fontFamily","fontWeight","captionMargin","api","axios","create","baseURL","Container","styled","div","ContainerFlipped","keyframes","flipInY","Card","pokemon","useState","isSending","setIsSending","flipped","setFlipped","stats","setStats","flipCard","a","get","id","res","onClick","alt","src","sprite","name","display","stat","base_stat","img","connect","state","searchField","list","filter","elem","toUpperCase","includes","map","card","value","Header","title","Input","input","SearchField","dispatch","useDispatch","onChange","event","type","payload","target","placeholder","App","cardList","setCardList","loading","setLoading","error","setError","useEffect","then","response","cardListResponse","results","url","split","catch","usePokemon","INITIAL_STATE","searchFieldReducer","action","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ff777c2.chunk.js","sourcesContent":["export const colors = {\n  primary: '#568A4E',\n  secondary: '#D68265',\n  darkBrown: '#8A5948',\n  purple: '#5F4C8A',\n  darkPurple: '#130c25',\n  lightPurple: '#A590D6',\n};\n","import React from 'react';\nimport SvgRadarChart from 'react-svg-radar-chart';\nimport { colors } from '../../colors';\n\nexport const RadarChart = ({ data }) => (\n  <>\n    {' '}\n    {console.log(data)}\n    <SvgRadarChart\n      style={{ flex: 1 }}\n      captions={Object.entries(data).reduce((acc, cur) => ({ ...acc, [cur[0]]: cur[0] === 'special-defense' ? 'S. Defense' : cur[0] }), {})}\n      data={[\n        {\n          data,\n          meta: { color: 'blue' },\n        },\n      ]}\n      size={200}\n      options={{\n        captionProps: () => ({\n          textAnchor: 'middle',\n          fontSize: 22,\n          fontFamily: 'arial',\n          fontWeight: 'bold',\n        }),\n        captionMargin: 40,\n      }}\n    />\n  </>\n);\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://pokeapi.co/api/v2/',\n});\n\nexport default api;\n","import styled, { keyframes } from 'styled-components';\nimport { flipInY } from 'react-animations'; import { colors } from '../../colors';\n\nexport const Container = styled.div`\n    padding: 2rem;\n    background-color: ${colors.primary};\n    border-color: ${colors.secondary};\n    border-style: solid;\n    border-width: 0.3rem;\n    border-radius: 10%;\n    margin: 0.5rem;\n    perspective: 1000px;\n    height: 10rem;\n    width: 10rem;\n    transition: all 1s ease;\n\n    &:hover {\n        animation-duration: 0.1s;\n        background-color: rgb(74, 87, 74);\n        \n        img{\n            transform: scale(1.1);\n\n        }\n    }\n\n    img{\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 9rem;\n        transition: all 1s ease;\n    }\n    div{\n        transition: all 1s ease;\n        font-size: 1.5rem;\n        text-transform: capitalize;\n        text-align: center;\n        color: ${colors.darkPurple};\n\n        div {\n            font-size: 1rem;\n        }\n\n    }\n`;\n\nexport const ContainerFlipped = styled.div`\n    padding: 2rem;\n    background-color: ${colors.primary};\n    border-color: ${colors.secondary};\n    border-style: solid;\n    border-width: 0.3rem;\n    border-radius: 10%;\n    margin: 0.5rem;\n    perspective: 1000px;\n    height: 10rem;\n    width: 10rem;\n    animation: 0.5s ${keyframes`${flipInY}`};\n    \n    div {\n        transition: 1s ease;\n        &:first-child{\n            position: absolute;\n            transition: 1s ease;\n            font-size: 1.5rem;\n            text-align: center;\n            color: ${colors.darkPurple};\n\n            img {\n                position: absolute;\n                opacity: 0.2;\n                display: inline-table;\n                width: 10rem;\n            }\n        }\n        text-align: justify;\n        text-transform: capitalize;\n\n    }\n\n    &:hover {\n        animation-duration: 0.1s;\n        background-color: rgb(74, 87, 74);\n        \n        img{\n            transform: scale(1.1);\n\n        }\n    }\n\n    img{\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 9rem;\n        transition: 1s ease;\n    }\n\n`;\n","import React, { useState } from 'react';\nimport { RadarChart } from '../radar-chart';\nimport api from '../../utils/api';\nimport { Container, ContainerFlipped } from './card.styled';\nimport 'react-svg-radar-chart/build/css/index.css';\n\nexport const Card = ({ pokemon }) => {\n  const [isSending, setIsSending] = useState(false);\n  const [flipped, setFlipped] = useState(false);\n  const [stats, setStats] = useState([]);\n\n  const flipCard = async () => {\n    if (isSending) return;\n    setIsSending(true);\n    const res = await api.get(`pokemon/${pokemon.id}`);\n    setStats(res.data.stats);\n    setFlipped(!flipped);\n    setIsSending(false);\n  };\n  return (\n    <>\n      {console.log(stats)}\n      {flipped\n        ? (\n          <ContainerFlipped onClick={flipCard}>\n            <div>\n              <img alt=\"\" src={pokemon.sprite} />\n              {pokemon.name}\n            </div>\n            <div style={{ display: 'flex' }}>\n              <RadarChart\n                data={stats\n                  .reduce((acc, cur) => ({ ...acc, [cur.stat.name]: cur.base_stat / 150 }), {})}\n              />\n            </div>\n            {/* {stats.map((stat) => (\n              <div key={stat.stat.name}>\n                {stat.stat.name}\n                {' '}\n                -\n                {stat.base_stat}\n              </div>\n            ))} */}\n          </ContainerFlipped>\n        )\n        : (\n          <Container onClick={flipCard}>\n            <img src={pokemon.img} alt=\"\" />\n            <div>\n              {' '}\n              {pokemon.name}\n              {' '}\n            </div>\n          </Container>\n        )}\n    </>\n  );\n};\n\n//     const sendRequest = useCallback(async () => {\n//       // don't send again while we are sending\n//       if (isSending) return\n//       // update state\n//       setIsSending(true)\n//       // send the actual request\n//       await API.sendRequest()\n//       // once the request is sent, update state again\n//       if (isMounted.current) // only update if we are still mounted\n//         setIsSending(false)\n//     }, [isSending]) // update the callback if the state changes\n\n//     return (\n//       <input type=\"button\" disabled={isSending} onClick={sendRequest} />\n//     )\n//   }\n\n// export default () => {\n//     const [isSending, setIsSending] = useState(false)\n//     const sendRequest = useCallback(async () => {\n//       // don't send again while we are sending\n//       if (isSending) return\n//       // update state\n//       setIsSending(true)\n//       // send the actual request\n//       await API.sendRequest()\n//       // once the request is sent, update state again\n//       setIsSending(false)\n//     }, [isSending]) // update the callback if the state changes\n\n//     return (\n//       <input type=\"button\" disabled={isSending} onClick={sendRequest} />\n//     )\n//   }\n\n// export default () => {\n//     const [isSending, setIsSending] = useState(false)\n//     const isMounted = useRef(true)\n\n//     // set isMounted to false when we unmount the component\n//     useEffect(() => {\n//       return () => {\n//         isMounted.current = false\n//       }\n//     }, [])\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  // grid-template-columns: 1fr 1fr 1fr;\n  width: 100%;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from '../card/card.component';\n\nimport { Container } from './card-list.styled';\n\nconst CardList = ({ searchField, list }) => (\n  <Container>\n    {list.filter(\n      (elem) => elem.name.toUpperCase().includes(searchField.toUpperCase()),\n    )\n      .map((card) => (\n        <div value={card.name} key={card.name}>\n          <Card pokemon={card} />\n        </div>\n      ))}\n  </Container>\n);\n\nconst mapStateToProps = (state) => ({\n  searchField: state.searchField.searchField,\n});\n\nexport default connect(mapStateToProps)(CardList);\n","import styled from 'styled-components';\nimport { colors } from '../../colors';\n\nexport const Container = styled.div`\n  color: aliceblue;\n  font-size: 3rem;\n  vertical-align: middle;\n  text-align: center;\n  font-family: 'Bigelow Rules', cursive;\n  background: linear-gradient(${colors.purple}, ${colors.darkPurple});\n  padding: 1rem;\n  cursor: default;\n  user-select: none;\n`;\n","import React from 'react';\nimport { Container } from './header.styled';\n\nexport const Header = ({ title }) => (\n  <Container>\n    {title}\n  </Container>\n);\n","import styled from 'styled-components';\nimport { colors } from '../../colors';\n\nexport const Input = styled.input`\n    padding: 1rem;\n    background-color: transparent;\n    border: none;\n    border-bottom: solid 1px;\n    margin: 0 3rem;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 1.3rem;\n    text-align: center;\n    position: sticky;\n    top: 0;\n    z-index: 100;\n    background-color: #fffffff0;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setSearchField } from '../../redux/modules/search-field/search-field.actions';\n\nimport { Input } from './search-field.styled';\n\nconst SearchField = () => {\n  const dispatch = useDispatch();\n\n  const search = (event) => dispatch(setSearchField(event.target.value.toUpperCase()));\n\n  return (\n    <Input\n      onChange={search}\n      placeholder=\"Search for pokemon\"\n    />\n  );\n};\n\nexport default SearchField;\n","export const setSearchField = (value) => ({\n  type: 'SET_SEARCH_FIELD',\n  payload: value,\n});\n","import styled from 'styled-components';\nimport { colors } from './colors';\n\n// body {\n// margin: 0;\n// padding: 0px;\n// font-family: sans-serif;\n// overflow-y: hidden;\n// }\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  background: linear-gradient(${colors.purple}, ${colors.secondary});\n  min-height: 100vh;\n`;\n","import React from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport { Header } from './components/header/header.component';\nimport SearchField from './components/search-field/search-field.component';\nimport { usePokemon } from './utils/api/hooks/usePokemon';\nimport { Container } from './styles';\nimport './reset.css';\n\nconst App = () => {\n  const [cardList, loading] = usePokemon();\n\n  return (\n    <Container>\n      <Header title=\"<> PokeAPI in React </>\" />\n      <SearchField />\n      {!loading && <CardList list={cardList} />}\n    </Container>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from 'react';\nimport api from '../index';\n\nexport const usePokemon = () => {\n  const [cardList, setCardList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    api.get('pokemon?limit=151')\n      .then((response) => {\n        const dataList = response.data.results;\n        const cardListResponse = dataList.map((data) => {\n          const id = data.url.split('/')[6];\n          return {\n            id,\n            name: data.name,\n            img: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`,\n          };\n        });\n        setCardList(cardListResponse);\n        setLoading(false);\n        setError(false);\n      })\n      .catch(() => {\n        setCardList([]);\n        setError(true);\n        setLoading(false);\n      });\n  }, []);\n\n  return [cardList, loading, error];\n};\n","const INITIAL_STATE = {\n  searchField: '',\n};\n\nconst searchFieldReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'SET_SEARCH_FIELD':\n      return {\n        ...state,\n        searchField: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default searchFieldReducer;\n","import { combineReducers } from 'redux';\n\nimport searchFieldReducer from './modules/search-field/search-field.reducer';\n\nexport default combineReducers({\n  searchField: searchFieldReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}