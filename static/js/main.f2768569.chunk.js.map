{"version":3,"sources":["api.js","components/card/card.component.jsx","components/cardList/cardList.component.jsx","components/header/header.component.jsx","App.js","index.js"],"names":["api","axios","create","baseURL","Animation","styled","div","keyframes","flipInY","Card","pokemon","useState","isSending","setIsSending","flipped","setFlipped","stats","setStats","flipCard","useCallback","a","get","id","res","console","log","data","onClick","className","src","sprite","name","map","stat","base_stat","img","alt","CardList","props","list","card","value","Header","title","App","state","cardList","then","response","results","url","split","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iTAMeA,E,OAJHC,EAAMC,OAAO,CACrBC,QAAS,+B,qOCIb,IAAMC,EAAYC,IAAOC,IAAV,IAAgCC,YAAhC,IAA4CC,YAE9CC,EAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACGC,oBAAS,GADZ,mBACxBC,EADwB,KACbC,EADa,OAEDF,oBAAS,GAFR,mBAExBG,EAFwB,KAEfC,EAFe,OAGLJ,mBAAS,IAHJ,mBAGxBK,EAHwB,KAGjBC,EAHiB,KAKzBC,EAAWC,sBAAW,sBAAC,4BAAAC,EAAA,0DACrBR,EADqB,wDAEzBC,GAAa,GAFY,SAGPb,EAAIqB,IAAJ,kBAAmBX,EAAQY,KAHpB,OAGnBC,EAHmB,OAIzBC,QAAQC,IAAIF,EAAIG,KAAKV,OACrBC,EAASM,EAAIG,KAAKV,OAClBD,GAAYD,GACZD,GAAa,GAPY,4CAQ1B,CAACD,IAEJ,OACIE,EACA,cAACV,EAAD,UAAW,sBAAKuB,QAAST,EAAUU,UAAU,cAAlC,UAEP,oCAAM,qBAAKC,IAAKnB,EAAQoB,SAAxB,IAAmCpB,EAAQqB,KAA3C,OACCf,EAAMgB,KAAI,SAAAC,GAAI,OAAI,gCACdA,EAAKA,KAAKF,KADI,MACKE,EAAKC,qBAIjC,sBAAKP,QAAST,EAAUU,UAAU,OAAlC,UACI,qBAAKC,IAAKnB,EAAQyB,IAAKC,IAAI,KAC3B,oCAAO1B,EAAQqB,KAAf,YChCCM,EAAW,SAAAC,GAAK,OACzB,qBAAKV,UAAU,WAAf,SACCU,EAAMC,KAAKP,KAAI,SAAAQ,GAAI,OACpB,sBAAKC,MAAOD,EAAKT,KAAjB,cAAwC,cAAC,EAAD,CAAMrB,QAAS8B,IAAvD,MAA4BA,EAAKT,YCJxBW,G,OAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OAClB,sBAAKf,UAAU,SAAf,cAA0Be,EAA1B,SCuDWC,G,uEAnDX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,SAAU,IAJJ,E,gEAQO,IAAD,OAChB9C,EAAIqB,IAAI,qBACH0B,MAAK,SAACC,GACH,IACMF,EADWE,EAAStB,KAAKuB,QACLjB,KAAI,SAACN,GAC3B,IAAMJ,EAAKI,EAAKwB,IAAIC,MAAM,KAAK,GAC/B,MAAO,CACH7B,KACAS,KAAML,EAAKK,KACXI,IAAI,iDAAD,OAAmDb,EAAnD,QACHQ,OAAO,4EAAD,OAA8ER,EAA9E,YAGd,EAAK8B,SAAS,CAAEN,kB,+BAmBxB,OACI,sBAAKlB,UAAU,MAAf,UAEI,cAAC,EAAD,CAAQe,MAAM,4BACd,cAAC,EAAD,CAAUJ,KAAMc,KAAKR,MAAMC,kB,GA7CzBQ,IAAMC,YCHxBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.f2768569.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://pokeapi.co/api/v2/',\n});\n\nexport default api;\n","import React, { useState, useCallback } from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport {flipInY} from 'react-animations';\nimport api from '../../api';\n\nimport './card.style.scss'\n\nconst Animation = styled.div`animation: 0.5s ${keyframes`${flipInY}`} `;\n\nexport const Card = ({pokemon}) => {\n    const [isSending, setIsSending] = useState(false);\n    const [flipped, setFlipped] = useState(false);\n    const [stats, setStats] = useState([]);\n\n    const flipCard = useCallback(async () => {\n        if (isSending) return;\n        setIsSending(true);\n        const res = await api.get(`pokemon/${pokemon.id}`)\n        console.log(res.data.stats);\n        setStats(res.data.stats);\n        setFlipped(!flipped)\n        setIsSending(false);\n    }, [isSending]);\n\n    return (\n        flipped ?\n        <Animation><div onClick={flipCard} className='cardFlipped'>\n            {/* <img src={pokemon.img} alt=\"\" /> */}\n            <div> <img src={pokemon.sprite}/> {pokemon.name} </div>\n            {stats.map(stat => <div>\n                {stat.stat.name} - {stat.base_stat}\n            </div>)}\n        </div></Animation>\n        :\n        <div onClick={flipCard} className='card'>\n            <img src={pokemon.img} alt=\"\" />\n            <div> {pokemon.name}  </div>\n        </div>\n\n    );\n}\n\n//     const sendRequest = useCallback(async () => {\n//       // don't send again while we are sending\n//       if (isSending) return\n//       // update state\n//       setIsSending(true)\n//       // send the actual request\n//       await API.sendRequest()\n//       // once the request is sent, update state again\n//       if (isMounted.current) // only update if we are still mounted\n//         setIsSending(false)\n//     }, [isSending]) // update the callback if the state changes\n\n//     return (\n//       <input type=\"button\" disabled={isSending} onClick={sendRequest} />\n//     )\n//   }\n\n// export default () => {\n//     const [isSending, setIsSending] = useState(false)\n//     const sendRequest = useCallback(async () => {\n//       // don't send again while we are sending\n//       if (isSending) return\n//       // update state\n//       setIsSending(true)\n//       // send the actual request\n//       await API.sendRequest()\n//       // once the request is sent, update state again\n//       setIsSending(false)\n//     }, [isSending]) // update the callback if the state changes\n  \n//     return (\n//       <input type=\"button\" disabled={isSending} onClick={sendRequest} />\n//     )\n//   }\n\n// export default () => {\n//     const [isSending, setIsSending] = useState(false)\n//     const isMounted = useRef(true)\n  \n//     // set isMounted to false when we unmount the component\n//     useEffect(() => {\n//       return () => {\n//         isMounted.current = false\n//       }\n//     }, [])","import React from 'react';\nimport './cardList.style.scss'\nimport { Card } from '../card/card.component.jsx';\n\nexport const CardList = props => (\n    <div className='cardList'>\n    {props.list.map(card => (\n    <div value={card.name} key={card.name}> <Card pokemon={card} /> </div>\n    ))}\n    </div>\n    );\n","import React from 'react';\r\nimport './header.styles.scss'\r\n\r\nexport const Header = ({title}) => (\r\n    <div className='header'> {title} </div>\r\n);","import React from 'react';\nimport api from './api';\nimport {CardList} from './components/cardList/cardList.component.jsx';\nimport {Header} from './components/header/header.component.jsx'\nimport { SideBar } from './components/sidebar/sidebar.component.jsx';\nimport './App.scss'\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            cardList: [],\n        };\n    }\n\n    componentDidMount() {\n        api.get('pokemon?limit=151')\n            .then((response) => {\n                const dataList = response.data.results;\n                const cardList = dataList.map((data) => {\n                    const id = data.url.split('/')[6];\n                    return {\n                        id,\n                        name: data.name,\n                        img: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\n                        sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`,\n                    };\n                });\n                this.setState({ cardList });\n            });\n    }\n\n    // handlePokemon = (event) => {\n    //     api.get(`pokemon-form/${event.target.value}`)\n    //         .then((response) => {\n    //             const sprite = response.data.sprites.front_default;\n    //             const name = response.data.pokemon.name;\n    //             this.setState({\n    //                 pokemon: {\n    //                     name,\n    //                     sprite,\n    //                 },\n    //             });\n    //         });\n    // };\n\n    render() {\n        return (\n            <div className=\"App\">\n                {/* <SideBar pokemon={this.state.cardList}/> */}\n                <Header title='<> PokeAPI in React </>'/>\n                <CardList list={this.state.cardList} />\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}