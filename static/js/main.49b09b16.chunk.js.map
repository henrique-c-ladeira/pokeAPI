{"version":3,"sources":["api.js","components/card/card.component.jsx","components/cardList/cardList.component.jsx","components/header/header.component.jsx","components/search-field/search-field.component.jsx","redux/search-field/search-field.actions.js","App.js","redux/search-field/search-field.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["api","axios","create","baseURL","Animation","styled","div","keyframes","flipInY","Card","pokemon","useState","isSending","setIsSending","flipped","setFlipped","stats","setStats","flipCard","a","get","id","res","data","onClick","className","alt","src","sprite","name","map","stat","base_stat","img","connect","state","searchField","list","filter","elem","toUpperCase","includes","card","value","Header","title","dispatch","setSearchField","type","payload","onChange","event","target","placeholder","App","cardList","then","response","results","url","split","setState","this","React","Component","INITIAL_STATE","searchFieldReducer","action","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49b09b16.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://pokeapi.co/api/v2/',\n});\n\nexport default api;\n","import React, { useState } from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport {flipInY} from 'react-animations';\nimport api from '../../api';\n\nimport './card.style.scss'\n\nconst Animation = styled.div`animation: 0.5s ${keyframes`${flipInY}`} `;\n\nexport const Card = ({pokemon}) => {\n    const [isSending, setIsSending] = useState(false);\n    const [flipped, setFlipped] = useState(false);\n    const [stats, setStats] = useState([]);\n\n    const flipCard = async () => {\n        if (isSending) return;\n        setIsSending(true);\n        const res = await api.get(`pokemon/${pokemon.id}`)\n        setStats(res.data.stats);\n        setFlipped(!flipped)\n        setIsSending(false);\n    };\n\n    return (\n        flipped ?\n        <Animation><div onClick={flipCard} className='cardFlipped'>\n            {/* <img src={pokemon.img} alt=\"\" /> */}\n            <div> <img alt='' src={pokemon.sprite}/> {pokemon.name} </div>\n            {stats.map(stat => <div key={stat.stat.name}>\n                {stat.stat.name} - {stat.base_stat}\n            </div>)}\n        </div></Animation>\n        :\n        <div onClick={flipCard} className='card'>\n            <img src={pokemon.img} alt=\"\" />\n            <div> {pokemon.name}  </div>\n        </div>\n\n    );\n}\n\n//     const sendRequest = useCallback(async () => {\n//       // don't send again while we are sending\n//       if (isSending) return\n//       // update state\n//       setIsSending(true)\n//       // send the actual request\n//       await API.sendRequest()\n//       // once the request is sent, update state again\n//       if (isMounted.current) // only update if we are still mounted\n//         setIsSending(false)\n//     }, [isSending]) // update the callback if the state changes\n\n//     return (\n//       <input type=\"button\" disabled={isSending} onClick={sendRequest} />\n//     )\n//   }\n\n// export default () => {\n//     const [isSending, setIsSending] = useState(false)\n//     const sendRequest = useCallback(async () => {\n//       // don't send again while we are sending\n//       if (isSending) return\n//       // update state\n//       setIsSending(true)\n//       // send the actual request\n//       await API.sendRequest()\n//       // once the request is sent, update state again\n//       setIsSending(false)\n//     }, [isSending]) // update the callback if the state changes\n  \n//     return (\n//       <input type=\"button\" disabled={isSending} onClick={sendRequest} />\n//     )\n//   }\n\n// export default () => {\n//     const [isSending, setIsSending] = useState(false)\n//     const isMounted = useRef(true)\n  \n//     // set isMounted to false when we unmount the component\n//     useEffect(() => {\n//       return () => {\n//         isMounted.current = false\n//       }\n//     }, [])","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from '../card/card.component.jsx';\n\n\nimport './cardList.style.scss'\n\nconst CardList = ({searchField, list}) => (\n    <div className='cardList'>\n        {list.filter(\n            elem => elem.name.toUpperCase().includes(searchField.toUpperCase()))\n            .map(card => (\n                <div value={card.name} key={card.name}>\n                    <Card pokemon={card} /> \n                </div>\n        ))}\n    </div>\n);\n\nconst mapStateToProps = state => ({\n    searchField: state.searchField.searchField\n})\n\nexport default connect(mapStateToProps)(CardList)\n\n\n    ","import React from 'react';\r\nimport './header.styles.scss'\r\n\r\nexport const Header = ({title}) => (\r\n    <div className='header'> {title} </div>\r\n);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField } from '../../redux/search-field/search-field.actions'\r\n\r\nconst SearchField = ({setSearchField}) => {\r\n\r\n    const search = (event) =>\r\n        setSearchField(event.target.value.toUpperCase());\r\n    \r\n    return (\r\n    <input \r\n        onChange={search} \r\n        placeholder='Search for pokemon'/>\r\n)};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setSearchField: searchField => dispatch(setSearchField(searchField))\r\n});\r\n\r\nexport default connect(\r\n    null, mapDispatchToProps\r\n)(SearchField);\r\n\r\n","export const setSearchField = value => ({\r\n    type: 'SET_SEARCH_FIELD',\r\n    payload: value\r\n});","import React from 'react';\nimport api from './api';\nimport CardList from './components/cardList/cardList.component.jsx';\nimport {Header} from './components/header/header.component.jsx'\nimport './App.scss'\nimport SearchField from './components/search-field/search-field.component';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            cardList: [],\n        };\n    }\n\n    componentDidMount() {\n        api.get('pokemon?limit=151')\n            .then((response) => {\n                const dataList = response.data.results;\n                const cardList = dataList.map((data) => {\n                    const id = data.url.split('/')[6];\n                    return {\n                        id,\n                        name: data.name,\n                        img: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\n                        sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`,\n                    };\n                });\n                this.setState({ cardList });\n            });\n    }\n\n    // handlePokemon = (event) => {\n    //     api.get(`pokemon-form/${event.target.value}`)\n    //         .then((response) => {\n    //             const sprite = response.data.sprites.front_default;\n    //             const name = response.data.pokemon.name;\n    //             this.setState({\n    //                 pokemon: {\n    //                     name,\n    //                     sprite,\n    //                 },\n    //             });\n    //         });\n    // };\n\n    render() {\n        return (\n            <div className=\"App\">\n                {/* <SideBar pokemon={this.state.cardList}/> */}\n                <Header title='<> PokeAPI in React </>'/>\n                <SearchField />\n                <CardList list={this.state.cardList} />\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","const INITIAL_STATE = {\r\n    searchField: ''\r\n}\r\n\r\nconst searchFieldReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case 'SET_SEARCH_FIELD':\r\n            return {\r\n                ...state,\r\n                searchField: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default searchFieldReducer;","import { combineReducers } from 'redux';\r\n\r\nimport searchFieldReducer from './search-field/search-field.reducer';\r\n\r\nexport default combineReducers({\r\n    searchField: searchFieldReducer\r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\n\nimport store from './redux/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}