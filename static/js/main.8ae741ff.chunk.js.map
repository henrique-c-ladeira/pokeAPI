{"version":3,"sources":["api.js","components/card/card.component.jsx","components/cardList/cardList.component.jsx","components/header/header.component.jsx","components/sidebar/sidebar.component.jsx","App.js","index.js"],"names":["api","axios","create","baseURL","Animation","styled","div","keyframes","flip","Card","pokemon","useState","flipped","setFlipped","flipCard","onClick","className","name","src","img","alt","CardList","props","list","map","card","value","Header","SideBar","filter","setFilter","onChange","event","target","placeholder","toUpperCase","includes","id","App","state","cardList","get","then","response","data","results","url","split","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iTAMeA,E,OAJHC,EAAMC,OAAO,CACrBC,QAAS,+B,6MCGb,IAAMC,EAAYC,IAAOC,IAAV,IAAgCC,YAAhC,IAA4CC,SAE9CC,EAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACDC,oBAAS,GADR,mBACxBC,EADwB,KACfC,EADe,KAGzBC,EAAW,WACbD,GAAYD,IAGhB,OACIA,EACA,cAACR,EAAD,UAAW,qBAAKW,QAASD,EAAUE,UAAU,OAAlC,SAEP,oCAAON,EAAQO,KAAf,WAGJ,sBAAKF,QAASD,EAAUE,UAAU,OAAlC,UACI,qBAAKE,IAAKR,EAAQS,IAAKC,IAAI,KAC3B,oCAAOV,EAAQO,KAAf,YCpBCI,EAAW,SAAAC,GAAK,OACzB,qBAAKN,UAAU,WAAf,SACCM,EAAMC,KAAKC,KAAI,SAAAC,GAAI,OACpB,sBAAKC,MAAOD,EAAKR,KAAjB,cAAwC,cAAC,EAAD,CAAMP,QAASe,IAAvD,MAA4BA,EAAKR,YCJxBU,G,OAAS,kBAClB,qBAAKX,UAAU,SAAf,wBCDSY,G,OAAU,SAAC,GAAe,IAAdlB,EAAa,EAAbA,QAAa,EACNC,mBAAS,IADH,mBAC3BkB,EAD2B,KACnBC,EADmB,KAKlC,OACA,sBAAKd,UAAU,UAAf,UACI,uBAAOe,SAJI,SAACC,GAAD,OAAWF,EAAUE,EAAMC,OAAOP,QAIpBQ,YAAY,WAEpCxB,EAAQmB,QAAO,SAAAnB,GAAO,OAAIA,EAAQO,KAAKkB,cAAcC,SAASP,EAAOM,kBAAgBX,KAAI,SAAAd,GAAO,OAC7F,gCAAwBA,EAAQ2B,GAAhC,MAAuC3B,EAAQO,OAArCP,EAAQ2B,YC+CfC,G,yDApDX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,SAAU,IAJJ,E,gEAQO,IAAD,OAChBxC,EAAIyC,IAAI,qBACHC,MAAK,SAACC,GACH,IACMH,EADWG,EAASC,KAAKC,QACLrB,KAAI,SAACoB,GAC3B,IAAMP,EAAKO,EAAKE,IAAIC,MAAM,KAAK,GAC/B,MAAO,CACHV,KACApB,KAAM2B,EAAK3B,KACXE,IAAI,iDAAD,OAAmDkB,EAAnD,YAGX,EAAKW,SAAS,CAAER,kB,+BAmBxB,OACI,sBAAKxB,UAAU,MAAf,UACI,cAAC,EAAD,CAASN,QAASuC,KAAKV,MAAMC,WAC7B,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAUxB,UAAU,YAAYO,KAAM0B,KAAKV,MAAMC,qB,GA7CnDU,IAAMC,Y,OCFxBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.8ae741ff.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://pokeapi.co/api/v2/',\n});\n\nexport default api;\n","import React, { useState } from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport {flip} from 'react-animations';\n\nimport './card.style.scss'\n\nconst Animation = styled.div`animation: 0.5s ${keyframes`${flip}`} `;\n\nexport const Card = ({pokemon}) => {\n    const [flipped, setFlipped] = useState(false);\n\n    const flipCard = () => {\n        setFlipped(!flipped)\n    };\n\n    return (\n        flipped ?\n        <Animation><div onClick={flipCard} className='card'>\n            {/* <img src={pokemon.img} alt=\"\" /> */}\n            <div> {pokemon.name} </div>\n        </div></Animation>\n        :\n        <div onClick={flipCard} className='card'>\n            <img src={pokemon.img} alt=\"\" />\n            <div> {pokemon.name}  </div>\n        </div>\n\n    );\n}\n\n//     const sendRequest = useCallback(async () => {\n//       // don't send again while we are sending\n//       if (isSending) return\n//       // update state\n//       setIsSending(true)\n//       // send the actual request\n//       await API.sendRequest()\n//       // once the request is sent, update state again\n//       if (isMounted.current) // only update if we are still mounted\n//         setIsSending(false)\n//     }, [isSending]) // update the callback if the state changes\n\n//     return (\n//       <input type=\"button\" disabled={isSending} onClick={sendRequest} />\n//     )\n//   }\n\n// export default () => {\n//     const [isSending, setIsSending] = useState(false)\n//     const sendRequest = useCallback(async () => {\n//       // don't send again while we are sending\n//       if (isSending) return\n//       // update state\n//       setIsSending(true)\n//       // send the actual request\n//       await API.sendRequest()\n//       // once the request is sent, update state again\n//       setIsSending(false)\n//     }, [isSending]) // update the callback if the state changes\n  \n//     return (\n//       <input type=\"button\" disabled={isSending} onClick={sendRequest} />\n//     )\n//   }\n\n// export default () => {\n//     const [isSending, setIsSending] = useState(false)\n//     const isMounted = useRef(true)\n  \n//     // set isMounted to false when we unmount the component\n//     useEffect(() => {\n//       return () => {\n//         isMounted.current = false\n//       }\n//     }, [])","import React from 'react';\nimport './cardList.style.scss'\nimport { Card } from '../card/card.component.jsx';\n\nexport const CardList = props => (\n    <div className='cardList'>\n    {props.list.map(card => (\n    <div value={card.name} key={card.name}> <Card pokemon={card} /> </div>\n    ))}\n    </div>\n    );\n","import React from 'react';\r\nimport './header.styles.scss'\r\n\r\nexport const Header = () => (\r\n    <div className='header'> PokeAPI</div>\r\n);","import React, {useState} from 'react';\r\nimport './sidebar.styles.scss'\r\n\r\nexport const SideBar = ({pokemon}) => {\r\n    const [filter, setFilter] = useState('');\r\n\r\n    const search = (event) => setFilter(event.target.value);\r\n\r\n    return (\r\n    <div className='sideBar'>\r\n        <input onChange={search} placeholder='search'/>\r\n        {/* <div className='rectangle'/> */}\r\n        {pokemon.filter(pokemon => pokemon.name.toUpperCase().includes(filter.toUpperCase())).map(pokemon => (\r\n            <div key={pokemon.id} >{pokemon.id} - {pokemon.name}</div>\r\n        ))}\r\n    </div>\r\n    );\r\n};","import React from 'react';\nimport api from './api';\nimport {CardList} from './components/cardList/cardList.component.jsx';\nimport {Header} from './components/header/header.component.jsx'\nimport { SideBar } from './components/sidebar/sidebar.component.jsx';\nimport './App.scss'\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            cardList: [],\n        };\n    }\n\n    componentDidMount() {\n        api.get('pokemon?limit=151')\n            .then((response) => {\n                const dataList = response.data.results;\n                const cardList = dataList.map((data) => {\n                    const id = data.url.split('/')[6];\n                    return {\n                        id,\n                        name: data.name,\n                        img: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\n                    };\n                });\n                this.setState({ cardList });\n            });\n    }\n\n    // handlePokemon = (event) => {\n    //     api.get(`pokemon-form/${event.target.value}`)\n    //         .then((response) => {\n    //             const sprite = response.data.sprites.front_default;\n    //             const name = response.data.pokemon.name;\n    //             this.setState({\n    //                 pokemon: {\n    //                     name,\n    //                     sprite,\n    //                 },\n    //             });\n    //         });\n    // };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <SideBar pokemon={this.state.cardList}/>\n                <div>\n                    <Header />\n                    <CardList className=\"card-list\" list={this.state.cardList} />\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}